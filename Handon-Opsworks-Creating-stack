Hands-on-Creating Stack:

Display a sample welcome page on AWS ops-works
--> In Amazon console 
--> Click on Ops works 
--> Add your First stack
--> Click version Chef 11 stack.
--> Give name ( Test-stack)
--> Give an Region, VPC, Default subnet, Operating system, default SSH key (If we need we can select but here we are not giving any thing)
--> Use Custom Chef cookbooks (OFF) for this Example,

Meaning: Cookbooks are to specify to customize our stack, exactly the way we want it to be, because the cookbook are the way we want it to be, as well as the attributes files holds details about the node and template files which can be used to dinamically generate files, by specifying a custom cookbooks wee get access to all of this things that we can use them to configure our infrastruture. They can be specified here as well as the repository type.


--> ADVANCED  DETALIS
--> choose the default settings for all by selecting the EBS backed option.
--> Select security group on(yes)
--> Add stack


Now add the layer:

--> Layer type: PHP App server.
--> Add layer
--> we can number of option in the settings option but we are not choosing any thing like Recipes, Network, EBS Volumes, Security.
--> But don't make any change and Just cancel or save.

Add another layer:

--> Layer type: Ganglia (Used for monitoring)
-->Add layer. 

Now add Instance to the PHP App server layer:

--> Size: t2.micro
--> choose subnets by default and Just add instance.
--> Now the instance will be in the start state.

open New tab and create ELB:

--> Classic load balancer.
--> Name: of the Load balancer.
--> Default VPC.
--> Security group default.
--> Health check : Ping protocol --> TCP of Port 80.
--> Review and create.
--> see the instance is running in the PHP-APP server. we can't edit because the instance is running. 

Now go back to the PHP -server layer:

--> Settings.
--> ADD Elastic Load balancer.
--> Slect the shut down an instance without waiting.
--> Save.

Now go to the App and deploy an App.

--> Add app
--> Name : test-app.
--> Type: PHP
--> Data Sources: None.
--> Applicaation source:
--> Respository type: Git
--> URL: https://github.com/pinehead/opsworks-sysops.git
--> Add App

Even through we added the stack its not deployed yet.

--> Click on deploy.
--> Make sure the deploy is selected.
--> Select the instance.
--> Deploy

--> we can also ssh and check if we need. And also ckeck the logs by clicking it that generated by Cloudwatch.

--> we can Just check in the PHP-app- server Public IP that its running or not.

--> Successfully deployed.

If we check the ELB it won't work but it has to work there to. Because fallow the steps below.

--> Change the security group for the ELB selected and change the Permissions in the inbound Rules to All traffic with 0.0.0.0/0. Now we can check back and see the ELB works.

--> we can check the Monitoting and Everything with the sample page.




